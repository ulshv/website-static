{"version":3,"sources":["webpack:///./src/templates/blog-index.tsx"],"names":["messages","en","allPostsTitle","ru","BlogIndex","render","langKey","this","props","pathContext","posts","data","allMarkdownRemark","edges","location","title","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","url","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"0MAQA,IAAMA,EAAW,CACfC,GAAI,CACFC,cAAe,aAEjBC,GAAI,CACFD,cAAe,eAIbE,E,gLACJC,OAAA,WAAS,IACCC,EAAYC,KAAKC,MAAMC,YAAvBH,QAEFI,EADWH,KAAKC,MAAdG,KACWC,kBAAkBC,MAC7BX,EAAkBF,EAASM,GAA3BJ,cAER,OACE,kBAAC,IAAD,CAAQY,SAAUP,KAAKC,MAAMM,SAAUR,QAASA,GAC9C,kBAAC,IAAD,CAAKS,MAAOb,EAAeI,QAASA,IACpC,kBAAC,IAAD,CAAKA,QAASA,IAGbI,EAAMM,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNF,EAAQE,EAAKC,YAAYH,OAASE,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKC,YAAYS,KACtDZ,IAGL,+BAAQE,EAAKC,YAAYU,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,kB,GAhCzCC,IAAMC,WA4Cf9B,YAER,IAAM+B,EAAY","file":"component---src-templates-blog-index-tsx-a2e5d2eac6cdeed99ccd.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst messages = {\n  en: {\n    allPostsTitle: `All posts`,\n  },\n  ru: {\n    allPostsTitle: `Все записи`,\n  }\n}\n\nclass BlogIndex extends React.Component<any> {\n  render() {\n    const { langKey } = this.props.pathContext;\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges;\n    const { allPostsTitle } = messages[langKey];\n\n    return (\n      <Layout location={this.props.location} langKey={langKey}>\n        <SEO title={allPostsTitle} langKey={langKey} />\n        <Bio langKey={langKey} />\n\n        {/* <TagsList /> */}\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.frontmatter.url}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: {\n        langKey: { eq: $langKey }\n        type: { eq: \"post\" }\n      } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            url\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}